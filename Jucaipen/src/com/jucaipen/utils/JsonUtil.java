package com.jucaipen.utils;import java.util.Date;import java.util.List;import org.json.JSONObject;import com.google.gson.Gson;import com.google.gson.JsonArray;import com.google.gson.JsonObject;import com.google.gson.reflect.TypeToken;import com.jucaipen.model.Account;import com.jucaipen.model.AccountDetail;import com.jucaipen.model.Answer;import com.jucaipen.model.AnswerSale;import com.jucaipen.model.ApkInfo;import com.jucaipen.model.Ask;import com.jucaipen.model.Bank;import com.jucaipen.model.Certification;import com.jucaipen.model.ChargeOrder;import com.jucaipen.model.ChatMsgObject;import com.jucaipen.model.Comment;import com.jucaipen.model.ExpressionInfo;import com.jucaipen.model.ExpressionType;import com.jucaipen.model.FamousTeacher;import com.jucaipen.model.Fans;import com.jucaipen.model.Favorites;import com.jucaipen.model.GiftClass;import com.jucaipen.model.Gifts;import com.jucaipen.model.Guardian;import com.jucaipen.model.HotIdea;import com.jucaipen.model.IdeaSale;import com.jucaipen.model.InvestmentType;import com.jucaipen.model.Knowledge;import com.jucaipen.model.KnowledgeClass;import com.jucaipen.model.LiveDetailSale;import com.jucaipen.model.Marker;import com.jucaipen.model.MyGifts;import com.jucaipen.model.MyPresent;import com.jucaipen.model.MySpecial;import com.jucaipen.model.MyVideo;import com.jucaipen.model.News;import com.jucaipen.model.NewsClass;import com.jucaipen.model.Order;import com.jucaipen.model.Position;import com.jucaipen.model.Rebate;import com.jucaipen.model.RebateIntegeralDetail;import com.jucaipen.model.Recommder;import com.jucaipen.model.SignDetail;import com.jucaipen.model.Studio;import com.jucaipen.model.StudioGuest;import com.jucaipen.model.Tactics;import com.jucaipen.model.TacticsSale;import com.jucaipen.model.TextLive;import com.jucaipen.model.TxtLiveDetails;import com.jucaipen.model.TxtLiveMsg;import com.jucaipen.model.User;import com.jucaipen.model.UserBank;import com.jucaipen.model.UserComm;import com.jucaipen.model.Video;import com.jucaipen.model.VideoClass;import com.jucaipen.model.VideoLive;import com.jucaipen.model.VideoLiveMsg;import com.jucaipen.model.VideoType;import com.jucaipen.service.KnowledgeClassSer;/** * @author ylf *  *         gson解析、封装json数据 */public class JsonUtil {	/**	 * @param json	 *            解析json	 */	public List<User> parseJson() {		String json = "[{'name':'张三'},{'name':'李四'}]";		Gson gson = new Gson();		List<User> user = gson.fromJson(json, new TypeToken<List<User>>() {		}.getType());		return user;	}	/**	 * @param news	 * @return 封装json数据	 */	public static String getObject(Object object) {		Gson gson = new Gson();		String json = gson.toJson(object);		return json;	}	public static String getRetMsg(int code, String msg) {		JsonObject object = new JsonObject();		object.addProperty("ret_code", code);		object.addProperty("err_msg", msg);		return object.toString();	}	/**	 * @param news	 * @return 返回新闻列表	 */	public static String getNewsList(List<News> news) {		JsonArray array = new JsonArray();		for (News ns : news) {			JsonObject object = new JsonObject();			object.addProperty("pager", ns.getPager());			object.addProperty("totlePager", ns.getTotlePager());			object.addProperty("id", ns.getId());			object.addProperty("title", ns.getTitle());			object.addProperty("comms", ns.getComments());			object.addProperty("imageThumb", ns.getImageUrl());			object.addProperty("insertDate", ns.getPublishDate());			object.addProperty("from", ns.getFrom());			array.add(object);		}		return array.toString();	}	/**	 * @param tvs	 * @return 返回视频列表	 */	public static String getVideoList(List<Video> tvs) {		JsonArray array = new JsonArray();		if (tvs != null) {			for (Video tv : tvs) {				JsonObject object = new JsonObject();				object.addProperty("page", tv.getPage());				object.addProperty("totlePage", tv.getTotlePage());				object.addProperty("id", tv.getId());				object.addProperty("title", tv.getTitle());				object.addProperty("imageUrl", tv.getImages());				object.addProperty("desc", tv.getDescript());				object.addProperty("videoUrl", tv.getHtmlUrl());				object.addProperty("classId", tv.getClassId());				object.addProperty("playCount",tv.getHitCount());				object.addProperty("videoDate",tv.getVideoDate());				//是否属于专辑   只有专辑才收费     有选集				object.addProperty("isSpecial", tv.isSpecial());				//是否收费				object.addProperty("isCharge", tv.isCharge());				array.add(object);			}		}		return array.toString();	}	/**	 * @param famousTeachers	 * @param isAttentions 	 * @return 获取推荐名师	 */	public static String getAllFamousTeacherList(List<FamousTeacher> famousTeachers) {		JsonArray array = new JsonArray();		if(famousTeachers!=null){			for (FamousTeacher teacher :famousTeachers) {				JsonObject object = new JsonObject();				object.addProperty("page",teacher.getPage());				object.addProperty("totlePage", teacher.getTotlePage());				object.addProperty("id", teacher.getId());				object.addProperty("nickName",teacher.getNickName());				object.addProperty("headFace", teacher.getHeadFace());				object.addProperty("level",teacher.getLevel());				object.addProperty("isV", teacher.getIsV());				object.addProperty("notice", teacher.getNotice());				object.addProperty("fans",teacher.getFans());				//直播状态 1未开始 2进行中 3已结束				object.addProperty("isEnd", teacher.getLiveIsEnd());				array.add(object);			}			}		return array.toString();	}				/**	 * @param famousTeachers	 * @param isAttentions 	 * @return 获取首页推荐名师	 */	public static String getFamousTeacherList(List<FamousTeacher> famousTeachers, List<Integer> isAttentions) {		JsonArray array = new JsonArray();		if(famousTeachers!=null){			for (int i=0;i<famousTeachers.size();i++) {				JsonObject object = new JsonObject();				object.addProperty("page", famousTeachers.get(i).getPage());				object.addProperty("totlePage", famousTeachers.get(i).getTotlePage());				object.addProperty("id", famousTeachers.get(i).getId());				object.addProperty("nickName", famousTeachers.get(i).getNickName());				object.addProperty("headFace", famousTeachers.get(i).getHeadFace());				object.addProperty("level", famousTeachers.get(i).getLevel());				object.addProperty("isV", famousTeachers.get(i).getIsV());				object.addProperty("notice", famousTeachers.get(i).getNotice());				object.addProperty("fans", famousTeachers.get(i).getFans());				//0   关注     1  没关注				object.addProperty("isAttention", isAttentions.get(i));				array.add(object);			}		}		return array.toString();	}	/**	 * @param live	 * @return 视频资源URL	 */	public static String getLiveUrl(VideoLive live) {		JsonObject object = new JsonObject();		object.addProperty("liveUrl", live.getVideoUrl());		return object.toString();	}	/**	 * @param hotIdeas	 * @param teachers	 * @return 获取所有的热门观点信息	 */	public static String getAllHotIdeaList(List<HotIdea> hotIdeas,			List<FamousTeacher> teachers) {		JsonArray array = new JsonArray();		if(hotIdeas!=null){			for (int i = 0; i < hotIdeas.size(); i++) {				JsonObject object = new JsonObject();				object.addProperty("page", hotIdeas.get(i).getPage());				object.addProperty("totlePage", hotIdeas.get(i).getTotlePgae());				object.addProperty("id", hotIdeas.get(i).getId());				object.addProperty("insertDate", hotIdeas.get(i).getInsertDate());				object.addProperty("title", hotIdeas.get(i).getTitle());				object.addProperty("hits", hotIdeas.get(i).getHits());				object.addProperty("goods", hotIdeas.get(i).getGoods());				object.addProperty("teacherId", teachers.get(i).getId());				object.addProperty("body", hotIdeas.get(i).getBodys());				object.addProperty("nickName", teachers.get(i).getNickName());				object.addProperty("level", teachers.get(i).getLevel());				object.addProperty("headFace", teachers.get(i).getHeadFace());				object.addProperty("isV", teachers.get(i).getIsV());				array.add(object);			}		}		return array.toString();	}	/**	 * @param askList	 * @param users	 * @return 获取提问列表	 */	public static String getAskList(List<Ask> askList, List<User> users) {		JsonArray array = new JsonArray();		if(askList!=null){			for (int i = 0; i < askList.size(); i++) {				JsonObject object = new JsonObject();				object.addProperty("page", askList.get(i).getPage());				object.addProperty("totlePage", askList.get(i).getTotlePage());				object.addProperty("askId", askList.get(i).getId());				object.addProperty("trueName", users.get(i).getNickName());				object.addProperty("insertDate", askList.get(i).getAskDate());				object.addProperty("askBodys", askList.get(i).getAskBody());				object.addProperty("headFace", users.get(i).getFaceImage());				//0免费 1收费				object.addProperty("isPay",askList.get(i).getIsPay());				//回答人数				object.addProperty("replyCount", askList.get(i).getReplyCount());				object.addProperty("answerBody", askList.get(i).getReplyBody());				array.add(object);			}		}		return array.toString();	}	/**	 * @param txtLives	 * @param teachers	 * @return 获取文字直播列表	 */	public static String getTxtLiveList(List<TextLive> txtLives,			List<FamousTeacher> teachers) {		JsonArray array = new JsonArray();		if(txtLives!=null){			for (int i = 0; i < txtLives.size(); i++) {				JsonObject object = new JsonObject();				object.addProperty("id", txtLives.get(i).getId());				object.addProperty("title", txtLives.get(i).getTitle());				object.addProperty("teacherName", teachers.get(i).getNickName());				object.addProperty("teacherFace", teachers.get(i).getHeadFace());				object.addProperty("isV", teachers.get(i).getIsV());				object.addProperty("attentNum", txtLives.get(i).getHits());				array.add(object);			}		}		return array.toString();	}	/**	 * @param videos	 * @param teachers	 * @return 获取视频直播列表	 */	public static String getLiveList(List<VideoLive> videos,			List<FamousTeacher> teachers) {		JsonArray array = new JsonArray();		if(videos!=null){			for (int i = 0; i < videos.size(); i++) {				JsonObject object = new JsonObject();				object.addProperty("id", videos.get(i).getId());				object.addProperty("title", videos.get(i).getTitle());				object.addProperty("images", videos.get(i).getVideoImage());				object.addProperty("teacherName", teachers.get(i).getNickName());				object.addProperty("teacherId", teachers.get(i).getId());				object.addProperty("attentNum", videos.get(i).getRenQi());				array.add(object);			}		}		return array.toString();	}	/**	 * @param videos	 * @return 获取学院教学视频	 */	public static String getTeachVideList(List<Video> videos) {		JsonArray array = new JsonArray();		////classId  isSpecial  isCharge		if(videos!=null){			for (Video video : videos) {				JsonObject object = new JsonObject();				object.addProperty("id", video.getId());				object.addProperty("title", video.getTitle());				object.addProperty("desc", video.getDescript());				object.addProperty("image", video.getImages());				object.addProperty("insertDate", video.getVideoDate());				object.addProperty("hits", video.getHitCount());				object.addProperty("videoUrl", video.getHtmlUrl());				object.addProperty("classId", video.getClassId());				object.addProperty("isSpecial", video.isSpecial());				object.addProperty("isCharge", video.isCharge());				array.add(object);			}		}		return array.toString();	}	/**	 * @param askClasses	 * @return 获取咨询分类信息	 */	public static String getAskClassList(List<NewsClass> types) {		JsonArray array = new JsonArray();		if(types!=null){			for (NewsClass type : types) {				JsonObject object = new JsonObject();				object.addProperty("classId", type.getId());				object.addProperty("typeName", type.getClassName());				array.add(object);			}		}		return array.toString();	}	/**	 * @param news	 * @param names	 * @return 获取相关新闻信息	 */	public static String getIndxKnownList(List<News> news) {		JsonArray array = new JsonArray();		if(news!=null){			for (News n : news) {				JsonObject object = new JsonObject();				object.addProperty("id", n.getId());				object.addProperty("title", n.getTitle());				object.addProperty("from", n.getFrom());				object.addProperty("comms", n.getComments());				object.addProperty("insertDate", n.getPublishDate());				object.addProperty("image", n.getImageUrl());				array.add(object);			}		}		return array.toString();	}	/**	 * @param user	 * @param localArea	 * @param localCity	 * @param localProvince	 * @return 返回用户信息	 */	public static String getUserInfo(User user, String localProvince,			String localCity, String localArea) {		JsonObject object = new JsonObject();		object.addProperty("nickName", user.getNickName());		object.addProperty("account", user.getMobileNum());		object.addProperty("sex", user.getSex());		object.addProperty("trueName", user.getTrueName());		object.addProperty("birthday", user.getBirthday());		object.addProperty("localProvince", localProvince);        object.addProperty("localArea", localArea);		object.addProperty("localCity", localCity);		object.addProperty("investType", user.getInvestStr());		object.addProperty("descript", user.getDescript());		object.addProperty("faceImage", user.getFaceImage());		return object.toString();	}	/**	 * @param types	 * @return 获取表情分类信息	 */	public static String getExpressionType(List<ExpressionType> types) {		JsonArray array = new JsonArray();		if(types!=null){			for (ExpressionType type : types) {				JsonObject object = new JsonObject();				object.addProperty("id", type.getId());				object.addProperty("typeName", type.getClassName());				array.add(object);			}		}		return array.toString();	}	/**	 * @param infos	 * @return 获取表情包下对应的表情	 */	public static String getExpressionInfo(List<ExpressionInfo> infos) {		JsonArray array = new JsonArray();		if(infos!=null){			for (ExpressionInfo info : infos) {				JsonObject object = new JsonObject();				object.addProperty("id", info.getId());				object.addProperty("typeId", info.getClassId());				object.addProperty("title", info.getName());				object.addProperty("faceUrl", info.getFaceurl());				array.add(object);			}		}		return array.toString();	}	/**	 * @param info	 * @return 获取最新apk版本信息	 */	public static String getApkInfo(ApkInfo info) {		JsonObject object = new JsonObject();		object.addProperty("ret_code", 0);		object.addProperty("versionCode", info.getVersionCode());		object.addProperty("apkUrl", info.getApkPath());		return object.toString();	}	/**	 * @param id	 * @return 返回登录结果	 */	public static String getLoginResult(User user) {		JsonObject object = new JsonObject();		object.addProperty("ret_code", 0);		object.addProperty("userId", user.getId());	/*	object.addProperty("isSys", user.getIsSysAdmin());		object.addProperty("isRoom", user.getIsRoomAdmin());		object.addProperty("reginDate", user.getRegDate());*/		object.addProperty("userName", user.getNickName());		object.addProperty("err_msg", "登录成功");		return object.toString();	}	/**	 * @param user	 * @return 返回用户第三方账号id	 */	public static String getOtherAccountList(User user) {		JsonObject object = new JsonObject();		object.addProperty("ret_code", 0);		object.addProperty("qqId", user.getQqId());		object.addProperty("weixinId", user.getWeiXinId());		object.addProperty("sinaId", user.getWeiBoId());		return object.toString();	}	/**	 * @param gifts	 * @return 获取礼品列表	 */	public static String getGiftList(List<Gifts> gifts) {		JsonArray array = new JsonArray();		if(gifts!=null){			for (Gifts g : gifts) {				JsonObject object = new JsonObject();				object.addProperty("page", g.getPage());				object.addProperty("totlePage", g.getTotlePage());				object.addProperty("id", g.getId());				object.addProperty("name", g.getTitle());				object.addProperty("price", g.getPrice());				object.addProperty("thumbnail", g.getThumbnail());				array.add(object);			}		}		return array.toString();	}	/**	 * 返回礼品分类信息	 */	public static String getGiftClass(List<GiftClass> gcs) {		JsonArray array = new JsonArray();		if(gcs!=null){			for (GiftClass gc : gcs) {				JsonObject object = new JsonObject();				object.addProperty("id", gc.getId());				object.addProperty("className", gc.getClassName());				array.add(object);			}		}		return array.toString();	}	/**	 * @param recommders	 * @param users	 * @return 获取我的推荐列表	 */	public static String getRecommderList(List<Recommder> recommders,			List<User> users) {		JsonArray array = new JsonArray();		if(recommders!=null){			for (int i = 0; i < recommders.size(); i++) {				JsonObject object = new JsonObject();				object.addProperty("page", recommders.get(i).getPage());				object.addProperty("totlePage", recommders.get(i).getTotlePage());				object.addProperty("id", recommders.get(i).getId());				object.addProperty("recommderDate", recommders.get(i)						.getInsertDate());				object.addProperty("recommder", users.get(i).getNickName());				object.addProperty("recommderPhone", users.get(i).getMobileNum());				object.addProperty("recommderImage", users.get(i).getFaceImage());				array.add(object);			}		}		return array.toString();	}	/**	 * @param presents	 * @param gifts	 * @return 获取我拥有的礼品列表	 */	public static String getMyPresentList(List<MyPresent> presents,			List<Gifts> gifts) {		JsonArray array = new JsonArray();		if(presents!=null){			for (int i = 0; i < presents.size(); i++) {				JsonObject object = new JsonObject();				object.addProperty("page", presents.get(i).getPage());				object.addProperty("totlePage", presents.get(i).getTotlePage());				object.addProperty("presentNum", presents.get(i).getPresentNum());				object.addProperty("presentName", gifts.get(i).getTitle());				object.addProperty("presentImage", gifts.get(i).getThumbnail());				array.add(object);			}		}		return array.toString();	}	/**	 * @param gifts	 * @param gList	 * @return 初始化我的礼品记录	 */	public static String getGiftRecoder(List<MyGifts> gifts, List<Gifts> gList) {		JsonArray array = new JsonArray();		if(gifts!=null){			for (int i = 0; i < gifts.size(); i++) {				JsonObject object = new JsonObject();				object.addProperty("page", gifts.get(i).getPage());				object.addProperty("totlePage", gifts.get(i).getTotlePage());				object.addProperty("id", gifts.get(i).getId());				object.addProperty("giftNum", gifts.get(i).getGiftNum());				object.addProperty("giftTitle", gList.get(i).getTitle());				object.addProperty("giftImage", gList.get(i).getThumbnail());				array.add(object);			}		}		return array.toString();	}	/**	 * @param positions	 * @return 获取岗位信息	 */	public static String getPositionlist(List<Position> positions) {		JsonArray array = new JsonArray();		if(positions!=null){			for (Position position : positions) {				JsonObject object = new JsonObject();				object.addProperty("id", position.getId());				object.addProperty("name", position.getName());				array.add(object);			}		}		return array.toString();	}	/**	 * @param types	 * @return 返回投资风格信息	 */	public static String getInvestType(List<InvestmentType> types) {		JsonArray array = new JsonArray();		for (InvestmentType type : types) {			JsonObject object = new JsonObject();			object.addProperty("id", type.getId());			object.addProperty("name", type.getTypeName());			array.add(object);		}		return array.toString();	}	/**	 * @param favourates	 * @param videos	 * @return 返回收藏视频信息	 */	public static String getFavourateVideos(List<Favorites> favourates,			List<Video> videos) {		JsonArray array = new JsonArray();		for (int i = 0; i < favourates.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("id", favourates.get(i).getId());			object.addProperty("insertDate", favourates.get(i).getDate());			object.addProperty("title", videos.get(i).getTitle());			object.addProperty("image", videos.get(i).getImages());			array.add(object);		}		return array.toString();	}	/**	 * @param favourates	 * @param knowledges	 * @return 返回知识信息	 */	public static String getFavourateKnowledge(List<Favorites> favourates,			List<Knowledge> knowledges) {		JsonArray array = new JsonArray();		for (int i = 0; i < favourates.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("id", favourates.get(i).getId());			object.addProperty("insertDate", favourates.get(i).getDate());			object.addProperty("title", knowledges.get(i).getTitle());			object.addProperty("images", knowledges.get(i).getImageUrl());			array.add(object);		}		return array.toString();	}	/**	 * @param fans	 * @param users	 * @return 返回用户关注讲师信息	 */	public static String getUserAttention(List<Fans> fans, List<User> users) {		return null;	}	/**	 * @param fans	 * @param teachers	 * @return 返回关注我的信息（针对讲师）	 */	public static String getTeacherAttention(List<Fans> fans,			List<FamousTeacher> teachers) {		JsonArray array = new JsonArray();		for (int i = 0; i < fans.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("page", fans.get(i).getPage());			object.addProperty("totlePage", fans.get(i).getTotlePage());			object.addProperty("id", fans.get(i).getId());			object.addProperty("teacherImage", teachers.get(i).getHeadFace());			object.addProperty("nickName", teachers.get(i).getNickName());			object.addProperty("isV", teachers.get(i).getIsV());			object.addProperty("notice", teachers.get(i).getNotice());			object.addProperty("fans", teachers.get(i).getFans());			object.addProperty("leavel", teachers.get(i).getLevel());			array.add(object);		}		return array.toString();	}	/**	 * @param guardians	 * @param users	 * @return 守护我的 (针对讲师)	 */	public static String getGuardianMy(List<Guardian> guardians,			List<User> users) {		return null;	}	/**	 * @param guardians	 * @param teachers	 * @return 我守护的	 */	public static String getMyGuardian(List<Guardian> guardians,			List<FamousTeacher> teachers) {		JsonArray array = new JsonArray();		for (int i = 0; i < guardians.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("page", guardians.get(i).getPage());			object.addProperty("totlePage", guardians.get(i).getTotlePage());			object.addProperty("id", guardians.get(i).getId());			object.addProperty("startDate", guardians.get(i).getStartDate());			object.addProperty("endDate", guardians.get(i).getEndDate());			object.addProperty("teacherImage", teachers.get(i).getHeadFace());			object.addProperty("nickName", teachers.get(i).getNickName());			object.addProperty("leavel", teachers.get(i).getLevel());			object.addProperty("isV", teachers.get(i).getIsV());			object.addProperty("introduce", teachers.get(i).getIntroduce());			array.add(object);		}		return array.toString();	}	/**	 * @param details	 * @param account 	 * @return 获取账单详细信息	 */	public static String getAccountDetail(List<AccountDetail> details, Account account) {		JsonArray array = new JsonArray();		for (AccountDetail detail : details) {			JsonObject object = new JsonObject();			object.addProperty("page", detail.getPage());			object.addProperty("totlePage", detail.getTotlePage());			object.addProperty("id", detail.getId());			object.addProperty("insertDate", detail.getInsertDate());			object.addProperty("detailMoney", detail.getDetailMoney());			//0收入，1消费			object.addProperty("type", detail.getDetailType());			object.addProperty("remark", detail.getRemark());			object.addProperty("Integeral", account.getIntegeral());			object.addProperty("jucaiBills", account.getJucaiBills());			array.add(object);		}		return array.toString();	}	/**	 * @param details	 * @return 获取订单详细信息	 */	public static String getOrderList(List<Order> orders) {		JsonArray array = new JsonArray();		for (Order order : orders) {			JsonObject object = new JsonObject();			object.addProperty("page", order.getPage());			object.addProperty("totlePage", order.getTotlePage());			object.addProperty("id", order.getId());			object.addProperty("title", order.getTitle());			object.addProperty("price", order.getAllMoney());			object.addProperty("orderCode", order.getOrderCode());			object.addProperty("payState", order.getPayState());			object.addProperty("insertDate", order.getInsertDate());			array.add(object);		}		return array.toString();	}	/**	 * @param guests	 * @return 获取演播室嘉宾信息	 */	public static String getGuests(List<StudioGuest> guests) {		JsonArray array = new JsonArray();		for (int i = 0; i < guests.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("id", guests.get(i).getId());			object.addProperty("headFace", guests.get(i).getHeadFace());			object.addProperty("nickName", guests.get(i).getName());			object.addProperty("leavel", guests.get(i).getLeavl());			object.addProperty("hoby", guests.get(i).getHoby());			array.add(object);		}		return array.toString();	}	/**	 * @param comms	 * @param users	 * @return 获取文字直播 观点评论 回复信息	 */	public static String getLogAndTxtComms(List<Comment> comms, List<User> users) {		JsonArray array = new JsonArray();		for (int i = 0; i < comms.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("id", comms.get(i).getId());			object.addProperty("headFace", users.get(i).getFaceImage());			object.addProperty("nickName", users.get(i).getNickName());			object.addProperty("insertDate", comms.get(i).getInsertDate());			object.addProperty("bodys", comms.get(i).getBodys());			object.addProperty("respCount", comms.get(i).getRepCount());			object.addProperty("goods", comms.get(i).getGoods());			object.addProperty("userLeavel", users.get(i).getUserLeval());			array.add(object);		}		return array.toString();	}	/**	 * @param knowTypes	 * @return 获取学院知识分类信息   多级分类	 * 	 */	public static String getMoreKnowType(List<KnowledgeClass> knowTypes) {		JsonArray array = new JsonArray();		for (KnowledgeClass type : knowTypes) {			JsonObject object = new JsonObject();			int bId = type.getId();			object.addProperty("id", bId);			object.addProperty("bigType", type.getClassName());			List<KnowledgeClass> sTypes = KnowledgeClassSer					.findKnowClassByPid(bId);			JsonArray array2 = new JsonArray();			for (KnowledgeClass st : sTypes) {				JsonObject obj2 = new JsonObject();				obj2.addProperty("sId", st.getId());				obj2.addProperty("smallType", st.getClassName());				array2.add(obj2);			}			object.add("item", array2);			array.add(object);		}		return array.toString();	}		/**	 * @param knowTypes	 * @return 获取学院知识分类信息	 * 	 */	public static String getSingleKnowType(List<KnowledgeClass> knowTypes) {		JsonArray array = new JsonArray();		for (KnowledgeClass type : knowTypes) {			JsonObject object = new JsonObject();			int bId = type.getId();			object.addProperty("id", bId);			object.addProperty("bigType", type.getClassName());			array.add(object);		}		return array.toString();	}	/**	 * @param teachers	 * @return 获取讲师详细信息	 */	public static String getTeacherDetail(FamousTeacher teacher) {		JsonObject object = new JsonObject();		object.addProperty("id", teacher.getId());		object.addProperty("nickName", teacher.getNickName());		object.addProperty("leavel", teacher.getLevel());		object.addProperty("joinDate", teacher.getJoinDate());		object.addProperty("plain", teacher.getIntroduce());		object.addProperty("notice", teacher.getNotice());		object.addProperty("hoby", teacher.getHoby());		return object.toString();	}	/**	 * @param markers	 * @param faces	 * @return 获取观点中打赏的信息	 */	public static String getMarkerData(List<Marker> markers, List<String> faces) {		JsonArray array = new JsonArray();		for (int i = 0; i < markers.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("id", markers.get(i).getId());			object.addProperty("face", faces.get(i));			object.addProperty("markerNum", markers.size());			array.add(object);		}		return array.toString();	}	/**	 * @param comms	 * @param users	 * @return 获取 视频 证券知识 评论 回复信息	 */	public static String getUserComms(List<UserComm> comms, List<User> users) {		JsonArray array = new JsonArray();		for (int i = 0; i < comms.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("id", comms.get(i).getId());			object.addProperty("insertDate", comms.get(i).getInsertDate());			object.addProperty("reptCount", comms.get(i).getReplyCount());			object.addProperty("body", comms.get(i).getBodys());			object.addProperty("userName", users.get(i).getUserName());			object.addProperty("headFace", users.get(i).getFaceImage());			object.addProperty("userLeavel", users.get(i).getUserLeval());			object.addProperty("goods",comms.get(i).getGoods());			array.add(object);		}		return array.toString();	}	/**	 * @param knowledge	 * @return 获取知识详细信息	 */	public static String getKnowDetails(Knowledge knowledge) {		JsonObject object = new JsonObject();		object.addProperty("title", knowledge.getTitle());		object.addProperty("from", knowledge.getFrom());		object.addProperty("insertDate", knowledge.getInsertDate());		object.addProperty("body", knowledge.getBodys());		object.addProperty("readNum", knowledge.getHits());		object.addProperty("goods", knowledge.getGoods());		object.addProperty("nextId", knowledge.getNextId());		object.addProperty("nextTitle", knowledge.getNextTitle());		object.addProperty("lastId", knowledge.getLastId());		object.addProperty("lastTitle", knowledge.getLastTitle());		return object.toString();	}	/**	 * @param ask	 * @param answer	 * @param teacher	 * @param user	 * @return 返回问答详细信息	 */	public static String getAnswerDetails(List<Answer> answers) {		JsonArray answerArray=new JsonArray();		/*JsonObject askObj=new JsonObject();		askObj.addProperty("askDate", ask.getAskDate());		askObj.addProperty("askBody", ask.getAskBody());		askObj.addProperty("isFree", ask.getIsPay());		askObj.addProperty("userFace", user.getFaceImage());		askObj.addProperty("userNickName", user.getNickName());		askObj.addProperty("userLeavel", user.getUserLeval());		array.add(askObj);*/				if(answers!=null){			for(Answer answer : answers){				JsonObject answerObj = new JsonObject();				answerObj.addProperty("teacherFace", answer.getTeacherFace());				answerObj.addProperty("teacherNickName", answer.getTeacherName());				answerObj.addProperty("teacherLeavel", answer.getTeacherLeavel());				answerObj.addProperty("answerDate", answer.getAnswerDate());				answerObj.addProperty("answerBody", answer.getAnswerBody());				answerArray.add(answerObj);			}		}		return answerArray.toString();	}	/**	 * @param ask	 * @param user	 * @return 返回提问详细信息	 */	public static String getAskDetails(Ask ask, User user) {		JsonObject object = new JsonObject();		object.addProperty("userFace", user.getFaceImage());		object.addProperty("userNickName", user.getNickName());		object.addProperty("userLeavel", user.getUserLeval());		object.addProperty("askDate", ask.getAskDate());		object.addProperty("askBody", ask.getAskBody());		object.addProperty("isFree", ask.getIsPay());		return object.toString();	}	/**	 * @param news	 * @return 获取新闻详细内容	 */	public static String getNewsDetails(News news) {		JsonObject object = new JsonObject();		object.addProperty("title", news.getTitle());		object.addProperty("from", news.getFrom());		object.addProperty("insertDate", news.getPublishDate());		object.addProperty("imagUrl", news.getImageUrl());		object.addProperty("body", news.getBodys());		object.addProperty("readNum", news.getHits());		object.addProperty("goods", news.getGoods());		object.addProperty("keyWord", news.getKeyWord());		object.addProperty("shareUrl", news.getHtmlPath());		return object.toString();	}	/**	 * @param idea	 * @param teacher	 * @return 获取热门观点信息信息	 */	public static String getIdeaDetails(HotIdea idea, FamousTeacher teacher) {		JsonObject object = new JsonObject();		object.addProperty("title", idea.getTitle());		object.addProperty("insertDate", idea.getInsertDate());		object.addProperty("teacherFace", teacher.getHeadFace());		object.addProperty("teacherName", teacher.getNickName());		object.addProperty("imageUrl", idea.getLogImage());		object.addProperty("body", idea.getBodys());		object.addProperty("readNum", idea.getHits());		object.addProperty("goods", idea.getGoods());		return object.toString();	}	/**	 * @param txts	 * @param txtDetails 	 * @param teacher	 * @return 获取讲师下的文字直播信息	 */	public static String getTxtLiveByTeacherId(TextLive txts, List<TxtLiveDetails> txtDetails) {		JsonArray array=new JsonArray();		for(TxtLiveDetails detail : txtDetails){			JsonObject object=new JsonObject();			object.addProperty("id",detail.getId());			object.addProperty("title",detail.getBodys());			object.addProperty("startDate",detail.getInsertDate());   			//是否收费（1否，2是）			object.addProperty("isFree", detail.getIsFree());			//是否结束（1未开始，2进行中，3已结束）			object.addProperty("hits", txts.getHits());			object.addProperty("isEnd", txts.getIsEnd());			object.addProperty("liveTitle", txts.getTitle());			array.add(object);		}		return array.toString();	}	/**	 * @param txtDetails	 * @param teacher	 * @param live	 * @return 返回文字直播详细信息	 */	public static String getTxtDetails(List<TxtLiveDetails> txtDetails) {		JsonArray array = new JsonArray();		for (int i = 0; i < txtDetails.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("id", txtDetails.get(i).getId());			object.addProperty("insertDate", txtDetails.get(i).getInsertDate());			object.addProperty("bodys", txtDetails.get(i).getBodys());			//是否收费（1否，2是）			object.addProperty("isLock", txtDetails.get(i).getIsFree());			array.add(object);		}		return array.toString();	}	/**	 * @param knows	 * @param kc	 * @return 返回知识列表	 */	public static String getKnowList(List<Knowledge> knows, KnowledgeClass kc) {		JsonArray array = new JsonArray();		if(knows!=null){			for (int i=0;i<knows.size();i++) {				String index=ArabicToChineseUtils.foematInteger(i+1);				JsonObject object = new JsonObject();				object.addProperty("id", knows.get(i).getId());				object.addProperty("title", index+"、"+knows.get(i).getTitle());				object.addProperty("insertDate", knows.get(i).getInsertDate());				object.addProperty("typeName", kc.getClassName());				array.add(object);			}		}		return array.toString();	}	/**	 * @param banks	 * @return 返回用户绑定的银行卡信息	 */	public static String getUserBankList(List<UserBank> banks) {		JsonArray array=new JsonArray();		for(UserBank bank : banks){			JsonObject object=new JsonObject();			object.addProperty("id",bank.getId());			object.addProperty("bankName", bank.getBankName());			object.addProperty("bankCode", bank.getBankCode());			array.add(object);		}		return array.toString();	}	/**	 * @param banks	 * @return  返回银行卡列表	 */	public static String getBankList(List<Bank> banks) {		JsonArray array=new JsonArray();		for(Bank bank :banks){			JsonObject object=new JsonObject();			object.addProperty("bankId",bank.getId());			object.addProperty("bankName",bank.getBankName());			array.add(object);		}		return array.toString();	}	/**	 * @param certs	 * @return  返回资格证书列表	 */	public static String getCertificationList(List<Certification> certs) {		JsonArray array=new JsonArray();		for(Certification certification : certs){			JsonObject object=new JsonObject();			object.addProperty("id",certification.getId());			object.addProperty("name",certification.getTypeName());			array.add(object);		}		return array.toString();	}	/**	 * @param ideas	 * @return  返回观点	 */	public static String getIdeaList(List<HotIdea> ideas) {		JsonArray array=new JsonArray();		for(HotIdea idea : ideas){			JsonObject object=new JsonObject();			object.addProperty("id",idea.getId());			object.addProperty("title",idea.getTitle());			object.addProperty("desc",idea.getBodys());			object.addProperty("insertDate",idea.getInsertDate());			object.addProperty("readNum", idea.getHits());			object.addProperty("isFree", idea.getIsFree());			array.add(object);		}		return array.toString();	}	/**	 * @param lives	 * @param videos 	 * @return  返回讲师下的直播信息	 */	public static String getLive(List<VideoLive> lives, List<Video> videos) {		JsonArray array=new JsonArray();		if(lives!=null){			JsonObject object=new JsonObject();			if(lives.size()>0){				object.addProperty("id",lives.get(0).getId());				object.addProperty("image",lives.get(0).getVideoImage());				object.addProperty("title",lives.get(0).getTitle());				object.addProperty("startDate",lives.get(0).getStartDate());				//直播状态 1未开始 2进行中 3已结束				object.addProperty("isEnd", lives.get(0).getIsEnd());			}else{				object.addProperty("err_msg", "暂无数据");			}			array.add(object);			JsonArray array1=new JsonArray();			for(Video video : videos){				JsonObject object1 =new JsonObject();				object1.addProperty("id",video.getId());				object1.addProperty("image",video.getImages());				object1.addProperty("title",video.getTitle());				object1.addProperty("startDate",video.getInsertDate());				object1.addProperty("hits", video.getHitCount());				//是否为付费视频  0为免费视频，1为付费视频				object1.addProperty("videoUrl", video.getHtmlUrl());				object1.addProperty("isCharge", video.isCharge());				object1.addProperty("isSpecial", video.isSpecial());				object1.addProperty("desc", video.getDescript());				object1.addProperty("classId", video.getClassId());				array1.add(object1);				array.add(array1);			}		}		return array.toString();	}	/**	 * @param details	 * @return  返回签到信息	 */	public static String getSignDetails(List<SignDetail> details) {	    JsonArray array=new JsonArray();	    for(SignDetail detail : details){	    	JsonObject object=new JsonObject();	    	object.addProperty("id",detail.getId());	    	object.addProperty("insertDate",detail.getInsertDate());	    	array.add(object);	    }		return array.toString();	}	/**	 * @param rebateArray	 * @return  获取榜单信息	 */	public static String getLateList(List<Rebate> rebateArray) {		JsonArray array=new JsonArray();		for(Rebate rebate : rebateArray){			JsonObject object=new JsonObject();			object.addProperty("id",rebate.getId());			object.addProperty("nickName", rebate.getFromName());			object.addProperty("contributeJucaiBills", rebate.getAllBills());			object.addProperty("userFace", rebate.getFromFace());			array.add(object);		}		return array.toString();	}	/**	 * @param guardianArray	 * @return  返回活跃榜单	 */	public static String getGuardianList(List<Guardian> guardianArray) {		JsonArray array=new JsonArray();		for(Guardian guardian : guardianArray){			JsonObject object=new JsonObject();			object.addProperty("id", guardian.getId());			object.addProperty("userName", guardian.getUserName());			array.add(object);		}		return array.toString();	}	/**	 * @param tactics	 * @return  获取战法列表信息	 */	public static String getTecticsList(List<Tactics> tactics) {		JsonArray array=new JsonArray();		for(Tactics tac : tactics){			JsonObject object=new JsonObject();			object.addProperty("id",tac.getId());			object.addProperty("title", tac.getTitle());			object.addProperty("desc",tac.getDesc());			object.addProperty("image", tac.getImageUrl());			object.addProperty("orderNum", tac.getOrderNum());			array.add(object);		}		return array.toString();	}	/**	 * @param types	 * @return  返回视频分类列表   不是类型列表   也不是讲师列表	 */	public static String getVideoClassList(List<VideoClass> types) {		JsonArray array=new JsonArray();		for(VideoClass cla : types){			JsonObject object=new JsonObject();			object.addProperty("id",cla.getId());			object.addProperty("title", cla.getTypeTitle());			array.add(object);		}		return array.toString();	}	/**	 * @param videoClass	 * @return  返回视频类型信息	 */	public static String getVideoTypelist(List<VideoType> videoClass) {		JsonArray array=new JsonArray();		JsonObject object1=new JsonObject();		object1.addProperty("id",-1);		object1.addProperty("title", "全部");		array.add(object1);		for(VideoType vt : videoClass){			JsonObject object=new JsonObject();			object.addProperty("id",vt.getId());			object.addProperty("title", vt.getTitle());			array.add(object);		}		return array.toString();	}	/**	 * @param teachers	 * @return  获取讲师信息	 */	public static String getTeacherList(List<FamousTeacher> teachers) {		JsonArray array=new JsonArray();		JsonObject object1=new JsonObject();		object1.addProperty("id",-1);		object1.addProperty("nickName", "全部");		array.add(object1);		for(FamousTeacher teacher : teachers){			JsonObject object=new JsonObject();			object.addProperty("id",teacher.getId());			object.addProperty("nickName",teacher.getNickName());			array.add(object);		}		return array.toString();	}	/**	 * @param studio	 * @return  返回当前正在直播的演播	 */	public static String getCurrentStudio(Studio studio) {		JsonObject object=new JsonObject();		object.addProperty("id", studio.getId());		object.addProperty("renQi", studio.getRenQi());		object.addProperty("title", studio.getTitle());		object.addProperty("studioUrl", StringUtil.playUrl_flv);		return object.toString();	}	/**	 * @param studios	 * @return  	 */	public static String getTodayStudio(List<Studio> studios) {		JsonArray array=new JsonArray();		for(Studio studio : studios){			JsonObject object=new JsonObject();			object.addProperty("title", studio.getTitle());			object.addProperty("id", studio.getId());			object.addProperty("startDate", studio.getStartDate());			object.addProperty("endDate", studio.getEndDate());			object.addProperty("renQi", studio.getRenQi());			object.addProperty("imageUrl",studio.getImageUrl());			array.add(object);		}		return array.toString();	}	/**	 * @param rebates	 * @return  获取我的返利信息	 */	public static String getMyRebate(List<RebateIntegeralDetail> rebates) {		JsonArray array=new JsonArray();		for(RebateIntegeralDetail rebate : rebates){			JsonObject object=new JsonObject();			object.addProperty("id",rebate.getId());			object.addProperty("insertDate",rebate.getInsertDate());			object.addProperty("rebateIntegerNum",rebate.getIntegralNum());			object.addProperty("remark", rebate.getRemark());			//（0推荐用户注册返利，1推荐申请讲师返利,2新用户注册返利，3用户评论返利,4用户签到返利）			int type=rebate.getType();			if(type==0){				object.addProperty("type", "推荐用户注册返利");			}else if(type==1){				object.addProperty("type", "推荐申请讲师返利");			}else if(type==2){				object.addProperty("type","新用户注册返利");			}else if(type==3){				object.addProperty("type","用户评论返利");			}else if(type==4){				object.addProperty("type","新用户签到返利");			}			array.add(object);		}		return array.toString();	}	public static String getAskList(List<Ask> asks, User user) {		JsonArray array = new JsonArray();		for (int i = 0; i < asks.size(); i++) {			JsonObject object = new JsonObject();			object.addProperty("page", asks.get(i).getPage());			object.addProperty("totlePage", asks.get(i).getTotlePage());			object.addProperty("askId", asks.get(i).getId());			object.addProperty("trueName", user.getNickName());			object.addProperty("insertDate", asks.get(i).getAskDate());			object.addProperty("askBodys", asks.get(i).getAskBody());			object.addProperty("headFace", user.getFaceImage());			//0免费 1收费			object.addProperty("isPay",asks.get(i).getIsPay());			//回答人数			object.addProperty("replyCount", asks.get(i).getReplyCount());			array.add(object);		}		return array.toString();	}	/**	 * @param charges	 * @return  返回我的充值记录	 */	public static String getMyCharge(List<ChargeOrder> charges) {		JsonArray array=new JsonArray();		for(ChargeOrder charge: charges){			JsonObject object=new JsonObject();			object.addProperty("id", charge.getId());        			object.addProperty("insertDate",charge.getInsertDate());			object.addProperty("orderCode", charge.getOrderCode());			object.addProperty("chargeMoney", charge.getChargeMoney());			//支付方式 1网上银行（通联） 2支付宝 3微信支付4：余额支付 5网上银行(汇付宝)			object.addProperty("payType", charge.getPayType());			//订单状态 1未支付  2已支付 3支付失败			object.addProperty("state", charge.getOrderState());			array.add(object);		}		return array.toString();	}	/**	 * @param hotIdeas	 * @param teachers	 * @return  	 */	public static String getIndexList(List<HotIdea> hotIdeas) {		JsonArray array=new JsonArray();		for(HotIdea idea : hotIdeas){			JsonObject object=new JsonObject();			object.addProperty("id", idea.getId());			object.addProperty("title", idea.getTitle());			object.addProperty("InsertDate", idea.getInsertDate());			object.addProperty("comms", idea.getCommens());			object.addProperty("imageUrl", idea.getLogImage());			object.addProperty("from", "聚财盆");			array.add(object);		}		return array.toString();	}	/**	 * @param user	 * @return  返回个人中心信息	 */	public static String getBaseInfo(User user) {		JsonObject object=new JsonObject();		object.addProperty("nickName",user.getNickName());		object.addProperty("imageFace", user.getFaceImage());		object.addProperty("leavel", user.getUserLeval());		object.addProperty("userName", user.getUserName());		object.addProperty("telPhone", user.getMobileNum());		return object.toString();	}	/**	 * @param teacher	 * @return  获取讲师基本信息	 */	public static String getTeacherBaseInfo(FamousTeacher teacher) {		JsonObject object=new JsonObject();		if(teacher!=null){			object.addProperty("headFace", teacher.getHeadFace());			object.addProperty("nickName", teacher.getNickName());			object.addProperty("isV", teacher.getIsV());			object.addProperty("leavel", teacher.getLevel());			object.addProperty("plain", teacher.getIntroduce());			object.addProperty("renQi", teacher.getLiveFans());			object.addProperty("attention", teacher.getFans());			object.addProperty("gurdian", teacher.getSignCount());						object.addProperty("joinDate", teacher.getJoinDate());			object.addProperty("notice", teacher.getNotice());			object.addProperty("hoby", teacher.getHoby());			object.addProperty("isAttention", teacher.isAttention());		}		return object.toString();	}	/**	 * @param myVideos	 * @return  获取我的视频	 */	public static String getMyVideoList(List<MyVideo> myVideos) {		JsonArray array=new JsonArray();		for(MyVideo video : myVideos){			JsonObject object=new JsonObject();			object.addProperty("id",video.getId());			object.addProperty("imageUrl", video.getVideoImag());			object.addProperty("videoId", video.getVideoId());			object.addProperty("videoTitle", video.getVideoTitle());			object.addProperty("insertDate", video.getInsertDate());			object.addProperty("endDate",video.getEndDate());			object.addProperty("startDate", video.getStartDate());			array.add(object);		}		return array.toString();	}	/**	 * @param mySpecials	 * @return  返回我的专辑	 */	public static String getMySpecialList(List<MySpecial> mySpecials) {		JsonArray array=new JsonArray();		for(MySpecial mySpecial : mySpecials){			JsonObject object=new JsonObject();			object.addProperty("id",mySpecial.getId());			object.addProperty("startDate", mySpecial.getStartDate());			object.addProperty("endDate",mySpecial.getEndDate());			object.addProperty("title", mySpecial.getSpecialTitle());			array.add(object);		}		return array.toString();	}	/**	 * @param ideaSales	 * @return  返回我的日志观点	 */	public static String getMyIdeaList(List<IdeaSale> ideaSales) {		JsonArray array=new JsonArray();		for(IdeaSale ideaSale : ideaSales){			JsonObject object=new JsonObject();			object.addProperty("id",ideaSale.getId());			object.addProperty("teacherFace", ideaSale.getTeacherFace());			object.addProperty("teacherName", ideaSale.getTeacherNickName());			object.addProperty("teacherLeavel", ideaSale.getTeacherLeavel());			object.addProperty("teacherIsV", ideaSale.getTeacherIsV());						object.addProperty("logTitle", ideaSale.getLogTitle());			object.addProperty("logBody", ideaSale.getLogBody());						object.addProperty("insertDate", ideaSale.getInsertDate());			array.add(object);		}		return array.toString();	}	/**	 * @param answerSales	 * @return  返回我的提问信息	 */	public static String getMyQusestionList(List<AnswerSale> answerSales) {		JsonArray array=new JsonArray();		for(AnswerSale sale : answerSales){			JsonObject object=new JsonObject();			object.addProperty("id",sale.getId());			object.addProperty("saleDate", sale.getInsetDate());			object.addProperty("askBody", sale.getAskBody());			object.addProperty("answerBody", sale.getAnswerBody());			object.addProperty("answerTeacher", sale.getAnswerTeacherName());			array.add(object);		}		return array.toString();	}	/**	 * @param txtSales	 * @return  返回我的文字直播	 */	public static String getMyTxtDetailList(List<LiveDetailSale> txtSales) {		JsonArray array=new JsonArray();	    for(LiveDetailSale sale : txtSales){	    	JsonObject object=new JsonObject();	    	object.addProperty("id", sale.getId());	    	object.addProperty("detailBody", sale.getDetailBody());	    	object.addProperty("ownTeacher", sale.getOwnTeacher());	    	object.addProperty("insertDate", sale.getInsertDate());	    	array.add(object);	    }		return array.toString();	}	/**	 * @param tacticsSales	 * @return  返回我的战法信息	 */	public static String getMyTacticsList(List<TacticsSale> tacticsSales) {		JsonArray array=new JsonArray();		for(TacticsSale sale : tacticsSales){			JsonObject object=new JsonObject();			object.addProperty("id",sale.getId());			object.addProperty("tacticeTitle", sale.getTacticsTitle());			object.addProperty("tacticsImage", sale.getTacticeImage());			object.addProperty("teacherName", sale.getTeacherName());			object.addProperty("insertDate", sale.getInsertDate());			array.add(object);		}		return array.toString();	}	/**	 * @param details	 * @return  返回今日解盘信息	 */	public static String getSoultionDishList(List<TxtLiveDetails> details) {		JsonArray array=new JsonArray();		if(details!=null){			for(TxtLiveDetails detail : details){				JsonObject object=new JsonObject();				object.addProperty("id",detail.getId());				object.addProperty("body", detail.getBodys());				object.addProperty("insertDate", detail.getInsertDate());				object.addProperty("isFree", detail.getIsFree());				array.add(object);			}		}		return array.toString();	}	/**	 * @param videos	 * @return  获取往期演播信息	 */	public static String getLastPlayList(List<Video> videos) {		JsonArray array=new JsonArray();		if(videos!=null){			for(Video video : videos){				JsonObject object=new JsonObject();				object.addProperty("page", video.getPage());				object.addProperty("totlePage", video.getTotlePage());				object.addProperty("id",video.getId());				object.addProperty("title", video.getTitle());				object.addProperty("imageUrl", video.getImages());				object.addProperty("videoDate", video.getVideoDate());				object.addProperty("hits", video.getHitCount());				object.addProperty("videoUrl", video.getHtmlUrl());				//是否为付费视频  0为免费视频，1为付费视频				object.addProperty("videoDate", video.getVideoType());				object.addProperty("isSpecial", video.isSpecial());				array.add(object);			}		}		return array.toString();	}	/**	 * @param studio	 * @return  返回人气榜	 */	public static String getStudioFansList(List<Studio> studios) {		JsonArray array=new JsonArray();		if(studios!=null){			for(Studio studio : studios){				JsonObject object=new JsonObject();				object.addProperty("id", studio.getId());				object.addProperty("title", studio.getTitle());				object.addProperty("renQi", studio.getRenQi());				object.addProperty("imageUrl", studio.getImageUrl());				array.add(object);			}		}		return array.toString();	}	public static String getAllQusetionList(List<Ask> asks) {		JsonArray array=new JsonArray();		for(Ask ask : asks){			JsonObject object=new JsonObject();			object.addProperty("id", ask.getId());			object.addProperty("askBody",ask.getAskBody());			List<Answer> answers=ask.getAnswers();			JsonArray array2=new JsonArray();			for(Answer answer : answers){				JsonObject object2=new JsonObject();				object2.addProperty("answerId", answer.getId());				object2.addProperty("answerBody", answer.getAnswerBody());				array2.add(object2);			}			object.add("answer", array2);			array.add(object);		}		return array.toString();	}	/**	 * @param answers	 * @return  回复提问回复信息	 */	public static String getAnswerList(List<Answer> answers) {		JsonArray array=new JsonArray();		for(Answer answer : answers){			JsonObject object=new JsonObject();			object.addProperty("id", answer.getId());			object.addProperty("answerBody", answer.getAnswerBody());			object.addProperty("answerDate", answer.getAnswerDate());			//0未采纳  1已采纳			object.addProperty("isCatch", answer.getIsCatch());			object.addProperty("privateBody", answer.getPrivateBody());			array.add(object);		}		return array.toString();	}		//   opType    1   上线       2    聊天      3   下线	// {"fromId":1,"liveId:1","opType":2,"toId":0,msg:"hello"}	public static ChatMsgObject parseChatMsg(String result){		ChatMsgObject msgObject=new ChatMsgObject();		JSONObject object=new JSONObject(result);		int fromId=object.getInt("fromId");		int liveId=object.getInt("liveId");		int opType=object.getInt("opType");		if(opType==1){			//上线		}else if(opType==2){			//聊天			int toId=object.getInt("toId");			String msg=object.getString("msg");			msgObject.setToId(toId);			msgObject.setMsg(msg);		}else{			//下线		}		msgObject.setFromId(fromId);		msgObject.setLiveId(liveId);		msgObject.setOpType(opType);		return msgObject;	}	/**	 * @param msgs  返回用户信息	 */	public static String createLiveMsgArray(List<VideoLiveMsg> msgs) {		JsonArray array=new JsonArray();		if(msgs!=null){			for(VideoLiveMsg liveMsg : msgs){				JsonObject object=new JsonObject();				object.addProperty("msgId", liveMsg.getId());				object.addProperty("sendId", liveMsg.getSendUserId());				object.addProperty("sendName", liveMsg.getSendName());				object.addProperty("msg", liveMsg.getMsg());				object.addProperty("shenHe", liveMsg.getShenhe());				object.addProperty("sendLeavel", liveMsg.getUserLeavel());				object.addProperty("toName", liveMsg.getReceiverName());				object.addProperty("fromFace", liveMsg.getSendFace());				object.addProperty("toFace", liveMsg.getReceiverFace());				object.addProperty("sendDate", liveMsg.getSendDate());				array.add(object);			}		}		return array.toString();	}			/**	 * @param msgs  返回用户信息	 */	public static String createTxtMsgArray(List<TxtLiveMsg> msgs) {		JsonArray array=new JsonArray();		if(msgs!=null){			for(TxtLiveMsg txtMsg : msgs){				JsonObject object=new JsonObject();				object.addProperty("sendId", txtMsg.getUserId());				object.addProperty("sendName", txtMsg.getUserName());				object.addProperty("msg", txtMsg.getMessBody());				object.addProperty("shenHe", txtMsg.getShenhe());				object.addProperty("sendLeavel", txtMsg.getUserLeavel());				object.addProperty("toName", txtMsg.getReceiverName());				object.addProperty("fromFace", txtMsg.getSendFace());				object.addProperty("toFace", txtMsg.getReceiverFace());				object.addProperty("sendDate", txtMsg.getInsertDate());				array.add(object);			}		}		return array.toString();	}	/**	 * @param fromUser	 * @param uId	 * @param msg	 * @param toUser	 * @return  返回要发送的数据	 */	public static String createSingleMsg(User fromUser, int uId, String msg, User toUser) {		JsonObject object=new JsonObject();		object.addProperty("sendName", fromUser.getNickName());		object.addProperty("toName", toUser.getNickName());		object.addProperty("msg", msg);		object.addProperty("sendDate", TimeUtils.format(new Date()));		return object.toString();	}	public static String getAnswerDetailList(List<Answer> answers) {		JsonArray array=new JsonArray();		if(answers!=null){			for(Answer answer : answers){				JsonObject object=new JsonObject();				object.addProperty("id", answer.getId());				object.addProperty("answerName", answer.getTeacherName());				object.addProperty("answerFace", answer.getTeacherFace());				object.addProperty("answerLeavel", answer.getTeacherLeavel());				object.addProperty("answerBody", answer.getAnswerBody());				object.addProperty("answerDate", answer.getAnswerDate());				object.addProperty("isCatch", answer.getIsCatch());				object.addProperty("privateBody",answer.getPrivateBody());				array.add(object);			}		}		return array.toString();	}	public static String getAskDetailList(List<Ask> asks) {		JsonArray array=new JsonArray();		if(asks!=null){			for(Ask ask : asks){				JsonObject object=new JsonObject();				object.addProperty("id",ask.getId());				object.addProperty("askName", ask.getUserName());				object.addProperty("askFace", ask.getUserFace());				object.addProperty("askLeavel",ask.getUserLeavel());				object.addProperty("askBody", ask.getAskBody());				object.addProperty("askDate", ask.getAskDate());				object.addProperty("isPay", ask.getIsPay());				array.add(object);			}		}		return array.toString();	}}